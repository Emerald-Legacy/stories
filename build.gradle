import org.asciidoctor.gradle.jvm.AsciidoctorTask
import java.text.SimpleDateFormat

plugins {
    id "org.asciidoctor.jvm.base" version "3.3.2"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id "org.asciidoctor.jvm.pdf" version "3.3.2"
}
repositories {
    mavenCentral()
}

asciidoctorj {
    version = '2.5.3'
}

ext {
    curriculumFileName = "stories"
}


class RenderStoryTask extends AsciidoctorTask {
    @Inject
    RenderStoryTask(WorkerExecutor we, String fileName) {
        super(we)

        forkOptions {
            jvmArgs "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED", "--add-opens", "java.base/java.io=ALL-UNNAMED"
        }

        sourceDir = new File("./docs/")
        baseDir = new File("./docs/")
        sources {
            include fileName
        }

        outputDir = new File("./build/")
        outputOptions {
            separateOutputDirs = false
            backends 'pdf', 'html'
        }

        attributes = [
                'icons'        : 'font',
                'version-label': '',
                'currentDate'  : '',
                'language'     : 'EN',
                'imagesdir'    : 'images',
                'pdf-stylesdir': '../pdf-theme/themes',
                'pdf-fontsdir' : '../pdf-theme/fonts',
                'pdf-style'    : 'el'
        ]
    }
}

tasks.register('buildStoryArchive') {
    group 'Stories'
    description 'Grouping task for generating all story files'
    dependsOn "renderChapterParts", "renderStories", "renderIndex"
}

task renderStories(type: RenderStoryTask,
        constructorArgs: ["stories/*.adoc"]) {
}

task renderChapterParts(type: RenderStoryTask,
        constructorArgs: ["stories/chapter_parts/*.adoc"]) {
}

task renderIndex(type: RenderStoryTask,
        constructorArgs: ["index.adoc"]) {

}


defaultTasks "buildStoryArchive"
